{"config":{"lang":["en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u6765\u5230FoggyWhale\u7684\u4e2a\u4eba\u7a7a\u95f4\ud83d\udc4f","text":"<p>\u4e3b\u9875\u6b63\u5728\u65bd\u5de5\u4e2d...</p>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/","title":"Number Systems and Boolean Algebra","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#lcdf","title":"LCDF","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#week-1-number-systems-and-boolean-algebra","title":"Week 1: Number Systems and Boolean Algebra","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#part-1","title":"Part 1","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#number-systems","title":"Number Systems","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#representation","title":"Representation","text":"<ul> <li> <p>A number with \\(radix\\ r\\) is represented by a string of digits:   $$   A_{n-1}A_{n-2}\\dots A_{1}A_{0}.A_{-1}A_{-2}\\dots A_{-m+1}A_{-m}   $$   where \\(0\\leq{A_i}&lt;r\\) and \\(.\\) is the radix point</p> </li> <li> <p>The string of digits represents the power series:   $$   Number_r=(\\Sigma_{i=0}^{i=n-1}A_i\\cdot{r^i}+\\Sigma_{j=-m}^{j=-1}A_j\\cdot{r^j})   $$</p> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#binary-arithmetic","title":"Binary Arithmetic","text":"<ul> <li>Single Bit Addition with Carry</li> <li>Mutiple Bit Addition</li> <li>Single Bit Subtraction with Borrow</li> <li>Mutiple Bit Subtraction</li> <li>Multiplication</li> <li>BCD Addition</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#single-bit-subtraction-with-borrow","title":"Single Bit Subtraction with Borrow","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#mutiple-bit-binary-subtraction","title":"Mutiple Bit Binary Subtraction","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#binary-multiplication","title":"Binary Multiplication","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#converting-decimal-to-binary","title":"Converting Decimal to Binary","text":"<ul> <li>Method 1</li> <li>Subtract the largest power of 2 not exceed the number</li> <li>Repeat, subtracting from the prior remainder and recording the power, until the remainder is zero</li> <li>Place 1's in the positions in the binary result corresponding to the powers recorded; in all other positions place 0's</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#method-1","title":"Method 1","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#converting-decimal-to-binary-cont","title":"Converting Decimal to Binary (Cont.)","text":"<ul> <li>Method 2</li> <li>Convert the Integer Part</li> <li>Convert the Fraction Part</li> <li>Join the two results with a radix point</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#conversion-details","title":"Conversion Details","text":"<ul> <li>To Convert the Integral Part:</li> </ul> <p>Repeatedly divide the number by the new radix and save the remainders. The digits for the new radix are the remainders in reverse order of their computation. If the new radix is more than 10, then convert all remainders exceed 10 to digits A, B, ...</p> <ul> <li>To Convert the Fraction Part:</li> </ul> <p>Repeatedly multiply the fraction by the new radix and save the integer digits that result. The digits for the new radix are the Integer digits in order of their computation. If the new radix is more than 10, then convert all integers exceed 10 to digits A, B, ...</p>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#example-convert-466875_10-to-base-2","title":"Example: Convert \\(46.6875_{10}\\) To Base 2","text":"<ul> <li>Convert 46 to Base 2</li> </ul> <p>\\(46_{10}=101110_2\\)</p> <ul> <li>Convert 0.6875 to Base 2</li> </ul> <p>\\(0.6875_{10}=0.1011_2\\)</p> <ul> <li>Join the results together with the radix point:</li> </ul> <p>radix point:</p> <p>\\(46.6875_{10}=101110.1011_2\\)</p>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#q-what-if-the-fractional-part-cant-become-0-as-a-result-of-the-repeated-multiplications","title":"Q: What if the fractional part can't become 0 as a result of the repeated multiplications?","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#solution-specify-number-of-bits-to-right-of-radix-point-and-round-or-truncate-to-this-number","title":"Solution: Specify number of bits to right of radix point and round or truncate to this number.","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#octal-hexadecimal-to-binary-and-back","title":"Octal (Hexadecimal) to Binary and Back","text":"<ul> <li>Example:</li> </ul> <p>\\((67.731)_8=110\\ 111.111\\ 011\\ 001_2\\)</p> <p>\\((312.64)_8=011\\ 001\\ 010.110\\ 100_2=11001010.1101_2\\)</p> <p>\\(11\\ 111\\ 101.010\\ 011\\ 11_2=(375.236)_8\\)</p> <p>\\(10\\ 110.11_2=(26.8)_8\\)</p> <p>\\((3\\rm{AB}4.1)_{16}=0011\\ 1010\\ 1011\\ 0100.0001_2\\)</p> <p>\\((21\\rm{A}.5)_{16}=0010\\ 0001\\ 1010.0101_2\\)</p> <p>\\(1001101.01101_2=0100\\ 1101.0110\\ 1000_2=(4\\rm{D}.68)_{16}\\)</p> <p>\\(110\\ 0101.101_2=(65.\\rm{A})_{16}\\)</p>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#q-how-many-bits-are-required-to-represent-decimal-digits-with-a-binary-code","title":"Q: How many bits are required to represent decimal digits with a binary code?","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#solution-lceil-log_210-rceil4","title":"Solution: \\(\\lceil log_2{10} \\rceil=4\\)","text":"<ul> <li>Generally, Given M elements to be presented by a binary code, the minimum number of bits, \\(n\\), needed, satisfies the following relationships:   $$   2^n\\geq{M}&gt;2^{n-1}   $$   \\(n=\\lceil{log_2{M}}\\rceil\\), where \\(\\lceil x \\rceil\\) called the ceiling function, is the integer greater than of equal to x</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#more-binary-codes","title":"More Binary Codes","text":"<ul> <li> <p>You can represent 4 elements in \\(radix\\ r=2\\) with \\(n=2\\) digits: (00, 01, 10, 11).</p> </li> <li> <p>You can represent 4 elements in \\(radix\\ r=2\\) with \\(n=4\\) digits: (0001, 0010, 0100, 1000).</p> </li> <li> <p>This second code is called a \"One-hot code\".</p> </li> <li> <p>One-hot encoding consists in using one bit representing each state.</p> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#more-binary-codes-cont","title":"More Binary Codes (Cont.)","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#binary-coded-decimal-bcd","title":"Binary Coded Decimal (BCD)","text":"<ul> <li>The BCD code is the 8, 4, 2, 1 code.</li> <li>8, 4, 2, and 1 is weights</li> <li>BCD is a weighted code</li> <li>This code is the simplest, most intuitive binary code for decimal digits and uses the same powers of 2 as a binary number, but only encodes the first ten values from 0 to 9</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#q-how-to-distinguish-between-conversion-and-coding","title":"Q: How to distinguish between Conversion and Coding?","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#conversion-or-coding","title":"Conversion or Coding?","text":"<ul> <li>Conversion is to convert a decimal number into a binary number.</li> <li>Coding is to convert every decimal digit into a binary number.</li> <li>\\(13_{10}=1101_2\\) (This is Conversion)</li> <li>\\(13 \\Leftrightarrow 0001|0011\\) (This is Coding)</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#example-add-2905_rmbcd-to-1897_rmbcd","title":"Example: Add \\(2905_{\\rm{BCD}}\\) to \\(1897_{\\rm{BCD}}\\)","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#error-detection-methods","title":"Error-Detection Methods","text":"<ul> <li>Parity Bit Error-Detection Codes</li> <li>Parity is an extra bit appended onto the code word to make the number of 1's odd or even.</li> <li>Even Parity: the number of 1's in the code word is even.</li> <li>Odd Parity: the number of 1's in the code word is odd.</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#gray-code","title":"Gray Code","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#conversion-from-binary-code-to-gray-code","title":"Conversion from Binary Code to Gray Code","text":"<ul> <li>Let Binary code be \\(b_3b_2b_1b_0\\). Then the Gray code can be obtained as follows:</li> </ul> <p>\\(g_3=b_3\\)</p> <p>\\(g_2=b_3 \\oplus b_2\\)</p> <p>\\(g_1=b_2 \\oplus b_1\\)</p> <p>\\(g_0=b_1 \\oplus b_0\\)</p> <p></p> Figure. Convert Binary code 11101 into Gray code"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#part-2","title":"Part 2","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#boolean-algebra","title":"Boolean Algebra","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#logical-operation","title":"Logical Operation","text":"<ul> <li>The three basic logical operations are:</li> <li>AND</li> <li>OR</li> <li>NOT</li> <li>AND is denoted by a dot ( \\(\\cdot\\) )</li> <li>OR is denoted by a plus ( + )</li> <li>NOT is denoted by an overbar ( $ \\overline{} $ ), a single quote mark ( ' ), or ( ~ ) before the variable</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#logic-gates","title":"Logic Gates","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#other-commonly-used-logic-gates","title":"Other Commonly Used Logic Gates","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#universal-gate","title":"Universal Gate","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#logic-diagrams-and-expressions","title":"Logic Diagrams and Expressions","text":"Truth tables and waveforms are unique, while equations and diagrams are not."},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#boolean-algebra_1","title":"Boolean Algebra","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#duality-rules","title":"Duality rules","text":"<ul> <li> <p>The dual of an algebraic expression is obtained by interchanging \\(+\\) and \\(\\cdot\\) and interchanging 0's and 1's, while variable don't be inverted</p> </li> <li> <p>Seek the dual of a function, the operation order keep as same as the origin function</p> </li> <li>The identities appear in dual pairs. When there is only one identity on a line the identity is self-dual. i.e., the dual expression = the original expression.</li> <li>Unless it happens to be self-dual, the dual of an expression does not equal to the expression itself.</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#duality-rules-cont","title":"Duality rules (Cont.)","text":"<ul> <li>Example: \\(F=(A+\\overline{C})\\cdot{B}+0\\)</li> </ul> <p>Dual: \\(F=(A\\cdot\\overline{C}+B)\\cdot{1}=A\\cdot\\overline{C}+B\\)</p> <ul> <li>Example: \\(G=X\\cdot{Y}+(\\overline{W+Z})\\)</li> </ul> <p>Dual: \\(G=((X+Y)\\cdot{\\overline{(W\\cdot{Z})}})=(X+Y)\\cdot{(\\overline{W}+\\overline{Z})}\\)</p> <ul> <li>Example: \\(H=A\\cdot{B}+A\\cdot{C}+B\\cdot{C}\\)</li> </ul> <p>Dual: \\(H=(A+B)\\cdot{(A+C)}\\cdot{(B+C)}\\)</p>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#duality-rules-cont_1","title":"Duality rules (Cont.)","text":"<ul> <li> <p>If the function G is the dual of F, then F is also G of duality. G and F is mutually duality formula.</p> </li> <li> <p>If the two logical functions F and G are equal, then the duality formula F' and G' are the same.</p> </li> <li> <p>Example:</p> </li> </ul> <p>\\(X+XY=X \\Leftrightarrow X(X+Y)=X\\)   (Absorption)</p> <p>\\(X(Y+Z)=XY+XZ \\Leftrightarrow X+YZ=(X+Y)(X+Z)\\)   (Distributive)</p>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#complementing-functions","title":"Complementing Functions","text":"<ul> <li> <p>For logic function F, interchange \\(+\\) and \\(\\cdot\\) operators and complement each constant value   and literal, then obtained the new function is the inverse function of the original function,   referred to as: \\(\\overline{F}\\)</p> </li> <li> <p>Example</p> </li> </ul> <p>\\(F=\\overline{A}B+C\\overline{D} \\Leftrightarrow \\overline{F}=(A+\\overline{B})(\\overline{C}+D)\\)</p> <p>\\(F=\\overline{X}Y\\overline{Z}+X\\bar{Y}\\bar{Z} \\Leftrightarrow \\overline{F}=(X+\\overline{Y}+Z)(\\overline{X}+Y+Z)\\)</p>"},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#q1-how-to-proof-aacdotba","title":"Q1: How to proof \\(A+A\\cdot{B}=A\\)?","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#q2-how-to-proof-aboverlineacbcaboverlineac","title":"Q2: How to proof \\(AB+\\overline{A}C+BC=AB+\\overline{A}C\\)?","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#consensus-theorem","title":"(Consensus Theorem)","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#q3-how-to-proof-overlinexyzxoverlineyoverlineyxz","title":"Q3: How to proof \\(\\overline{(X+Y)}Z+X\\overline{Y}=\\overline{Y}(X+Z)\\)?","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#useful-theorems","title":"Useful Theorems","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#example1-simplify-expression","title":"Example1: Simplify Expression","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#faboverlineacdoverlineabdoverlineacoverlinedabcd","title":"\\(F=AB+\\overline{A}CD+\\overline{A}BD+\\overline{A}C\\overline{D}+ABCD\\)","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#example2-simplify-expression","title":"Example2: Simplify Expression","text":""},{"location":"%E6%95%B0%E9%80%BB/Lecture1/#labaoverlinecoverlinebcoverlinecboverlinebdoverlinedbadefg","title":"\\(L=AB+A\\overline{C}+\\overline{B}C+\\overline{C}B+\\overline{B}D+\\overline{D}B+ADE(F+G)\\)","text":""}]}